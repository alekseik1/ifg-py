name: tests

on:
  push:
    # master has separate pipeline
    branches-ignore:
      - 'master'
    # docs are built externally by readthebdocs
    paths-ignore:
      - 'docs/**'
  # schedule every day at midnight
  schedule:
    - cron: '0 0 * * *'

jobs:
  test:
    name: "pytest"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # run pipeline on all supported python versions
        python-version: ['2.7', '3.6', '3.7', '3.8', '3.9']
        # Windows and macOS are not tested due to environment setup problems
        os: ['ubuntu-latest', 'macos-latest']
        exclude:
          - os: 'macos-latest'
            python-version: '2.7'

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install poetry
        uses: snok/install-poetry@v1.0.0
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          version: "1.1.7"
      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        run: poetry install
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      - name: Test with pytest
        run: poetry run python -m pytest --cov=./ --cov-report=xml
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        with:
          directory: ./coverage/reports/
          env_vars: OS,PYTHON
          fail_ci_if_error: true
          files: ./coverage1.xml,./coverage2.xml
          flags: unittests
          name: codecov-umbrella
          path_to_write_report: ./coverage/codecov_report.txt
          verbose: true
      - name: Check style
        continue-on-error: false
        run: poetry run python -m flake8
