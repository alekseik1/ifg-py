name: tests

on:
  push:
    # master has separate pipeline
    branches-ignore:
      - 'master'
    # docs are built externally by readthebdocs
    paths-ignore:
      - 'docs/**'
  # schedule every day at midnight
  schedule:
    - cron: '0 0 * * *'

jobs:
  test:
    name: "pytest"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # run pipeline on all supported python versions
        python-version: ['2.7', '3.5', '3.6', '3.7', '3.8', '3.9']
        os: ['ubuntu-latest', 'macos-latest', 'windows-latest']
        exclude:
          # On 2021-07-22 does not work without MS Visual C++ 9.0
          # which is not available
          - os: 'windows-latest'
            python-version: '2.7'

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      # Additional setup for Windows
      # Does nothing on MacOS and Linux
      - name: Install Visual C++
        uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: 14.0
      - name: Prepare Poetry
        uses: abatilo/actions-poetry@v2.0.0
        with:
          poetry-version: "1.1.7"
          # virtualenvs-create: true
          # virtualenvs-in-project: true
      # Restore pip cache to speed up the pipeline
      - name: Restore pip cache
        uses: actions/cache@v2
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      - name: Install dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install
#        run: poetry export -f requirements.txt --output requirements.txt
#      - name: Install dependencies
#        run: |
#          # numpy should be installed in advance
#          pip install numpy
#          pip install -r requirements.txt
      - name: Test with pytest
        run: |
          poetry run pytest
      - name: Check style
        continue-on-error: false
        run: |
          poetry run flake8
