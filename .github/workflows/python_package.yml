name: Test package and publish Python üêç distributions üì¶ to PyPI

on: [push]

jobs:
  test:
    name: "test with pytest + run examples"
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['2.7', '3.5', '3.6', '3.7']

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Restore pip cache
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        # numpy should be installed in advance
        pip install numpy
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Test with pytest
      run: |
        pytest
    - name: Run examples
      run: |
        python -m ifg.examples

  build:
    name: build package
    runs-on: ubuntu-latest
    needs: [test]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools wheel twine
      - name: Build package
        run: |
          python setup.py sdist bdist_wheel
      - name: Save built package
        uses: actions/upload-artifact@v2
        with:
          name: pypi-package
          path: |
            dist/*

  deploy:
    name: deploy to PyPi
    runs-on: ubuntu-latest
    needs: [test, build]
    if: startsWith(github.ref, 'refs/tags')

    steps:
      - name: Download an artifact package
        uses: actions/download-artifact@v2
        with:
          name: pypi-package
          path: dist/
      - name: Publish distribution üì¶ to PyPI
        uses: pypa/gh-action-pypi-publish@master
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
